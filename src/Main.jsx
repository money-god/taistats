import React from 'react'
import { useTranslate } from 'react-polyglot';
import Collateral from './components/Collateral';
import Psm from './components/Psm';
import HistoricalDebtChart from './components/HistoricalDebtChart';
import Pip from './components/Pip'
import CollateralChart from './components/CollateralChart';
import Clip from './components/Clip';
import Vest from './components/Vest';
import { Tab, Tabs, TabList, TabPanel } from 'react-tabs';
import 'react-tabs/style/react-tabs.css';
import { useLocation, useHistory } from "react-router-dom";


const formatAmount = new Intl.NumberFormat('en-US', {
  style: 'decimal',
  minimumFractionDigits: 0,
  maximumFractionDigits: 2
})

const formatNoDecimals = new Intl.NumberFormat('en-US', {
  style: 'decimal',
  minimumFractionDigits: 0,
  maximumFractionDigits: 0
})

const formatCurrency = new Intl.NumberFormat('en-US', {
  style: 'decimal',
  minimumFractionDigits: 2,
  maximumFractionDigits: 4
})

const formatTwoDp = new Intl.NumberFormat('en-US', {
  style: 'decimal',
  minimumFractionDigits: 2,
  maximumFractionDigits: 2
})

const formatPercent = new Intl.NumberFormat('en-US', {
  style: 'percent',
  minimumFractionDigits: 2,
  maximumFractionDigits: 2
})

const formatFiveDp = new Intl.NumberFormat('en-US', {
  style: 'decimal',
  minimumFractionDigits: 5,
  maximumFractionDigits: 5
})

const formatSixDp = new Intl.NumberFormat('en-US', {
  style: 'decimal',
  minimumFractionDigits: 6,
  maximumFractionDigits: 6
})

const formatEightDp = new Intl.NumberFormat('en-US', {
  style: 'decimal',
  minimumFractionDigits: 8,
  maximumFractionDigits: 8
})

const Main = (props) => {
  const t = useTranslate()
  document.title = `${formatNoDecimals.format(props.debt)} - Dai Stats`
  const sysCollat = props.sysLocked / props.debt

  const nextFlap = () =>
    formatAmount.format(
      (Number(props.surplusBuffer)
        + Number(props.surplusBump))
      - Number(props.sysSurplus)
    )

  // hack till Main component is broken into component per section
  const location = useLocation();
  const history = useHistory();
  // const indexToTab = ['/overview', '/collateral', '/oracles', '/auctions', '/ecosystem', '/addresses', '/vesting']
  const indexToTab = ['/overview']
  function tabNameToIndex() {
    let i = indexToTab.indexOf(location.pathname)
    return (i >= 0 ? i : 0)
  }

  return (
    <div>
      <div className="container">
        <Tabs defaultIndex={tabNameToIndex()} onSelect={index => history.push(indexToTab[index])}>
          <TabList>
            <Tab><p className="is-size-5">Overview</p></Tab>
            {/* <Tab><p className="is-size-5">Collateral</p></Tab>
            <Tab><p className="is-size-5">Oracles</p></Tab>
            <Tab><p className="is-size-5">Auctions</p></Tab>
            <Tab><p className="is-size-5">Ecosystem</p></Tab>
            <Tab><p className="is-size-5">Addresses</p></Tab>
            <Tab><p className="is-size-5">Vesting</p></Tab> */}
          </TabList>

          <TabPanel>
            <div className="columns">
              <div className="column">
                <div className="box has-text-centered">
                  <h3 className="title" title={props.debt}>
                    {props.debt >= 420000000 && props.debt < 421000000 && <span role="img" aria-label="Tree">ðŸŒ²</span>} {formatAmount.format(props.debt)} / {formatAmount.format(props.Line)}
                  </h3>
                  <h4 className="subtitle is-size-3">{t('daistats.total_token', { token: 'Dai' })}</h4>
                  <HistoricalDebtChart data={props.historicalDebt} />
                </div>
              </div>
            </div>
            <div className="columns">
              <div className="column">
                <div className="box has-text-centered">
                  <CollateralChart ilks={props.ilks} debt={props.sysLocked} useValue={true} />
                  <h4 className="subtitle is-size-4">Tai Collateralization</h4>
                </div>
              </div>
              <div className="column">
                <div className="box has-text-centered">
                  <CollateralChart ilks={props.ilks} debt={props.debt} groupBy={true} />
                  <h4 className="subtitle is-size-4">Tai Generated by Collateral</h4>
                </div>
              </div>
            </div>
            <div className="columns">
              <div className="column">
                <div className="box has-text-centered">
                  <h3 className="title" title={props.sysLocked}>${formatAmount.format(props.sysLocked)}</h3>
                  <h4 className="subtitle is-size-4">{t('daistats.total_locked')}</h4>
                </div>
              </div>
              <div className="column">
                <div className="box has-text-centered">
                  <h3 className="title" title={sysCollat}>{formatPercent.format(sysCollat)}</h3>
                  <h4 className="title subtitle is-size-4">{t('daistats.collat_ratio')}</h4>
                </div>
              </div>
            </div>
          </TabPanel>
        </Tabs>
      </div>
    </div>
  )
}

export default Main
